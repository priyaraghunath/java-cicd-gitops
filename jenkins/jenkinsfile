pipeline {
  agent any

  tools {
    maven 'Maven 3.8.6'
  }

  environment {
    SONAR_TOKEN = credentials('sonar-token')
    AWS_REGION = 'us-east-2'
    ECR_REPO = '682033504000.dkr.ecr.us-east-2.amazonaws.com/myapp'
    DOCKER_CREDENTIALS = credentials('dockerhub-creds') // optional if pushing to Docker Hub too
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/priyaraghunath/java-cicd-gitops.git'
      }
    }

    stage('Build') {
      steps {
        dir('app/myapp') {
          sh 'mvn clean install'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        dir('app/myapp') {
          withSonarQubeEnv('MySonar') {
            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN'
          }
        }
      }
    }

    stage('Docker Build and Push to ECR') {
      steps {
        dir('app/myapp') {
          script {
            def imageTag = "${env.ECR_REPO}:${env.BUILD_NUMBER}"
            sh "docker build -t ${imageTag} ."
            sh "aws ecr get-login-password --region ${env.AWS_REGION} | docker login --username AWS --password-stdin ${env.ECR_REPO.split('/')[0]}"
            sh "docker push ${imageTag}"
            env.IMAGE_TAG = imageTag
          }
        }
      }
    }

    stage('Deploy to EKS') {
      steps {
        script {
          sh "kubectl set image deployment/myapp myapp=${env.IMAGE_TAG} --record"
          sh "kubectl rollout status deployment/myapp"
        }
      }
    }
  }
}
